---
  - name: development | package_installer_os_macosx | install macports packages
    macports: name={{ item }} state=present
    with_items: macports_packages
    environment: env
    tags:
      - macports
    when: macports_packages is defined

  - name: development | package_installer_os_macosx | configure homebrew vars
    tags:
      - homebrew
    set_fact:
      homebrew_user: '{{ homebrew_user | default(ansible_user_id) }}'
      homebrew_group: '{{ homebrew_group | default(ansible_user_gid) }}'

  - block:

    - name: development | package_installer_os_macosx | update homebrew
      homebrew:
        update_homebrew: true
      environment: env

    - name: development | package_installer_os_macosx | ensure taps are tapped
      homebrew_tap:
        tap: '{{ item.name | default(item) }}'
        url: '{{ item.url | default(omit) }}'
        state: present
      loop: "{{ homebrew_taps }}"

    - name: development | package_installer_os_macosx | install homebrew packages
      homebrew:
        name: "{{ homebrew_packages }}"
        state: present
      environment: env
      when: homebrew_packages is defined

    - name: development | package_installer_os_macosx | install homebrew cask packages
      homebrew_cask:
        name: "{{ item.name | default(item) }}"
        state: present
        install_options: "{{ item.install_options | default('appdir=' + homebrew_cask_app_dir) }}"
        accept_external_apps: true
      loop: "{{ homebrew_cask_packages }}"
      when: homebrew_cask_packages is defined

    become: "{{ (homebrew_user != ansible_user_id) | bool }}"
    become_user: "{{ homebrew_user }}"
    tags:
      - homebrew
